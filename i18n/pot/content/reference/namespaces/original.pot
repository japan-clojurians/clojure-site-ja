# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Japan Clojurians
# This file is distributed under the same license as the clojure-site-ja package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: clojure-site-ja 0.0.1\n"
"POT-Creation-Date: 2019-07-25 20:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: en/content/reference/libs.adoc:4 en/content/reference/data_structures.adoc:4
#: en/content/reference/multimethods.adoc:4 en/content/reference/agents.adoc:4
#: en/content/reference/lazy.adoc:4 en/content/reference/transients.adoc:4
#: en/content/reference/macros.adoc:4 en/content/reference/transducers.adoc:4
#: en/content/reference/atoms.adoc:4
#: en/content/reference/other_functions.adoc:4
#: en/content/reference/datatypes.adoc:4
#: en/content/reference/repl_and_main.adoc:4
#: en/content/reference/protocols.adoc:4
#: en/content/reference/other_libraries.adoc:4
#: en/content/reference/documentation.adoc:4 en/content/reference/refs.adoc:4
#: en/content/reference/lisps.adoc:4 en/content/reference/namespaces.adoc:4
#: en/content/reference/sequences.adoc:4 en/content/reference/reducers.adoc:4
#: en/content/reference/metadata.adoc:4 en/content/reference/evaluation.adoc:4
#: en/content/reference/compilation.adoc:4
#: en/content/community/downloads.adoc:4 en/content/community/license.adoc:4
#: en/content/community/downloads_older.adoc:4 en/content/community/swag.adoc:4
#: en/content/community/libraries.adoc:4 en/content/404.adoc:4
#: en/content/about/spec.adoc:4 en/content/about/clojureclr.adoc:4
#: en/content/about/dynamic.adoc:4
#: en/content/about/concurrent_programming.adoc:4
#: en/content/about/functional_programming.adoc:4 en/content/about/state.adoc:4
#: en/content/about/jvm_hosted.adoc:4 en/content/about/clojurescript.adoc:4
#: en/content/about/runtime_polymorphism.adoc:4 en/content/about/lisp.adoc:4
#: en/content/about/rationale.adoc:4 en/content/about/features.adoc:4
#: en/content/privacy.adoc:4 en/content/search.adoc:4
msgid "Rich Hickey 2015-01-01"
msgstr ""

#. type: Title ==
#: en/content/reference/libs.adoc:64
#: en/content/reference/data_structures.adoc:70
#: en/content/reference/data_structures.adoc:90
#: en/content/reference/data_structures.adoc:98
#: en/content/reference/data_structures.adoc:107
#: en/content/reference/data_structures.adoc:116
#: en/content/reference/data_structures.adoc:162
#: en/content/reference/data_structures.adoc:174
#: en/content/reference/data_structures.adoc:188
#: en/content/reference/data_structures.adoc:223
#: en/content/reference/agents.adoc:64
#: en/content/reference/other_functions.adoc:41
#: en/content/reference/other_functions.adoc:65
#: en/content/reference/repl_and_main.adoc:205
#: en/content/reference/refs.adoc:73 en/content/reference/vars.adoc:97
#: en/content/reference/namespaces.adoc:24
#, no-wrap
msgid "Related functions"
msgstr ""

#. type: Plain text
#: en/content/reference/namespaces.adoc:1 en/content/guides/faq.adoc:203
#: en/content/guides/reader_conditionals.adoc:87
#: en/content/news/2011/07/22/introducing-clojurescript.adoc:28
#, no-wrap
msgid "Namespaces"
msgstr ""

#. type: Plain text
#: en/content/reference/namespaces.adoc:17
msgid ""
"Namespaces are mappings from simple (unqualified) symbols to Vars and/or "
"Classes. Vars can be interned in a namespace, using _**def**_ or any of its "
"variants, in which case they have a simple symbol for a name and a reference "
"to their containing namespace, and the namespace maps that symbol to the "
"same var. A namespace can also contain mappings from symbols to vars "
"interned in other namespaces by using https://clojure.github.io/clojure/"
"clojure.core-api.html#clojure.core/refer[refer] or https://clojure.github.io/"
"clojure/clojure.core-api.html#clojure.core/use[use], or from symbols to "
"Class objects by using https://clojure.github.io/clojure/clojure.core-api."
"html#clojure.core/import[import]. Note that namespaces are first-class, they "
"can be enumerated etc. Namespaces are also dynamic, they can be created, "
"removed and modified at runtime, at the Repl etc."
msgstr ""

#. type: Plain text
#: en/content/reference/namespaces.adoc:19
msgid ""
"The best way to set up a new namespace at the top of a Clojure source file "
"is to use the https://clojure.github.io/clojure/clojure.core-api."
"html#clojure.core/ns[ns macro]. By default this will create a new namespace "
"that contains mappings for the classnames in +java.lang+ plus `clojure.lang."
"Compiler`, and the functions in `clojure.core`."
msgstr ""

#. type: Plain text
#: en/content/reference/namespaces.adoc:21
msgid ""
"At the Repl it's best to use https://clojure.github.io/clojure/clojure.core-"
"api.html#clojure.core/in-ns[in-ns], in which case the new namespace will "
"contain mappings only for the classnames in +java.lang+. In order to access "
"the names from the `clojure.core` namespace you must execute +(clojure.core/"
"refer 'clojure.core)+. The `user` namespace at the Repl has already done "
"this."
msgstr ""

#. type: Plain text
#: en/content/reference/namespaces.adoc:23
msgid ""
"The current namespace, _pass:[*ns*]_ can and should be set only with a call "
"to https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/in-"
"ns[in-ns] or the https://clojure.github.io/clojure/clojure.core-api."
"html#clojure.core/ns[ns macro], both of which create the namespace if it "
"doesn't exist."
msgstr ""

#. type: Plain text
#: en/content/reference/namespaces.adoc:32
msgid ""
"Creating and switching to a namespace: https://clojure.github.io/clojure/"
"clojure.core-api.html#clojure.core/in-ns[in-ns] https://clojure.github.io/"
"clojure/clojure.core-api.html#clojure.core/ns[ns] https://clojure.github.io/"
"clojure/clojure.core-api.html#clojure.core/create-ns[create-ns] Adding to a "
"namespace: https://clojure.github.io/clojure/clojure.core-api.html#clojure."
"core/alias[alias] <<special_forms#def,def>> https://clojure.github.io/"
"clojure/clojure.core-api.html#clojure.core/import[import] https://clojure."
"github.io/clojure/clojure.core-api.html#clojure.core/intern[intern] https://"
"clojure.github.io/clojure/clojure.core-api.html#clojure.core/refer[refer] "
"Finding what namespaces exist: https://clojure.github.io/clojure/clojure."
"core-api.html#clojure.core/all-ns[all-ns] https://clojure.github.io/clojure/"
"clojure.core-api.html#clojure.core/find-ns[find-ns] Examining a namespace: "
"https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/ns-"
"name[ns-name] https://clojure.github.io/clojure/clojure.core-api."
"html#clojure.core/ns-aliases[ns-aliases] https://clojure.github.io/clojure/"
"clojure.core-api.html#clojure.core/ns-imports[ns-imports] https://clojure."
"github.io/clojure/clojure.core-api.html#clojure.core/ns-interns[ns-interns] "
"https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/ns-"
"map[ns-map] https://clojure.github.io/clojure/clojure.core-api.html#clojure."
"core/ns-publics[ns-publics] https://clojure.github.io/clojure/clojure.core-"
"api.html#clojure.core/ns-refers[ns-refers] Getting a namespace from a "
"symbol: https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/"
"resolve[resolve] https://clojure.github.io/clojure/clojure.core-api."
"html#clojure.core/ns-resolve[ns-resolve] https://clojure.github.io/clojure/"
"clojure.core-api.html#clojure.core/namespace[namespace] Removing things: "
"https://clojure.github.io/clojure/clojure.core-api.html#clojure.core/ns-"
"unalias[ns-unalias] https://clojure.github.io/clojure/clojure.core-api."
"html#clojure.core/ns-unmap[ns-unmap] https://clojure.github.io/clojure/"
"clojure.core-api.html#clojure.core/remove-ns[remove-ns]"
msgstr ""
