# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Japan Clojurians
# This file is distributed under the same license as the clojure-site-ja package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: clojure-site-ja 0.0.1\n"
"POT-Creation-Date: 2019-06-12 00:05+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: en/content/reference/metadata.adoc:4 en/content/reference/protocols.adoc:4
#: en/content/reference/sequences.adoc:4
#: en/content/reference/multimethods.adoc:4 en/content/reference/libs.adoc:4
#: en/content/reference/transients.adoc:4
#: en/content/reference/compilation.adoc:4
#: en/content/reference/other_libraries.adoc:4
#: en/content/reference/documentation.adoc:4 en/content/reference/macros.adoc:4
#: en/content/reference/transducers.adoc:4 en/content/reference/refs.adoc:4
#: en/content/reference/lazy.adoc:4 en/content/reference/namespaces.adoc:4
#: en/content/reference/lisps.adoc:4 en/content/reference/evaluation.adoc:4
#: en/content/reference/other_functions.adoc:4
#: en/content/reference/reducers.adoc:4
#: en/content/reference/data_structures.adoc:4
#: en/content/reference/atoms.adoc:4 en/content/reference/repl_and_main.adoc:4
#: en/content/reference/agents.adoc:4 en/content/reference/datatypes.adoc:4
#: en/content/community/libraries.adoc:4 en/content/community/license.adoc:4
#: en/content/community/downloads_older.adoc:4
#: en/content/community/downloads.adoc:4 en/content/community/swag.adoc:4
#: en/content/404.adoc:4 en/content/privacy.adoc:4 en/content/search.adoc:4
#: en/content/about/spec.adoc:4 en/content/about/concurrent_programming.adoc:4
#: en/content/about/lisp.adoc:4 en/content/about/jvm_hosted.adoc:4
#: en/content/about/runtime_polymorphism.adoc:4 en/content/about/dynamic.adoc:4
#: en/content/about/features.adoc:4 en/content/about/rationale.adoc:4
#: en/content/about/state.adoc:4 en/content/about/clojurescript.adoc:4
#: en/content/about/functional_programming.adoc:4
#: en/content/about/clojureclr.adoc:4
msgid "Rich Hickey 2015-01-01"
msgstr ""

#. type: Plain text
#: en/content/reference/metadata.adoc:23 en/content/reference/metadata.adoc:29
#: en/content/reference/libs.adoc:63 en/content/reference/java_interop.adoc:78
#: en/content/reference/java_interop.adoc:98
#: en/content/reference/java_interop.adoc:111
#: en/content/reference/java_interop.adoc:133
#: en/content/reference/java_interop.adoc:140
#: en/content/reference/java_interop.adoc:154
#: en/content/reference/java_interop.adoc:195
#: en/content/reference/evaluation.adoc:62
#: en/content/reference/evaluation.adoc:73 en/content/community/editing.adoc:71
#: en/content/community/editing.adoc:85 en/content/community/editing.adoc:103
#: en/content/community/editing.adoc:121 en/content/community/editing.adoc:131
msgid "''''"
msgstr ""

#. type: Title =
#: en/content/reference/libs.adoc:1
#, no-wrap
msgid "Using Libs"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:18
msgid ""
"Clojure provides for code loading and dependency tracking via its \"lib\" "
"facility. A lib is a named unit of Clojure source code contained in a Java "
"resource within classpath. A lib will typically provide the complete set of "
"definitions that make up one Clojure namespace."
msgstr ""

#. type: Title ==
#: en/content/reference/libs.adoc:19
#, no-wrap
msgid "Lib Conventions"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:22
msgid "Clojure defines conventions for naming and structuring libs:"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:24
msgid ""
"A lib name is a symbol that will typically contain two or more parts "
"separated by periods."
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:25
msgid ""
"A lib's container is a Java resource whose classpath-relative path is "
"derived from the lib name:"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:26
msgid "The path is a string"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:27
msgid "Periods in the lib name are replaced by slashes in the path"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:28
msgid "Hyphens in the lib name are replaced by underscores in the path"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:29
msgid ""
"The path may end with \".class\", \".clj\", or \".cljc\" (see <<libs#order,"
"Lib load order>> below)"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:30
msgid "A lib begins with an \"ns\" form that"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:31
msgid "creates the Clojure namespace that shares its name, and"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:32
msgid ""
"declares its dependencies on Java classes, Clojure's core facilities, and/or "
"other libs,"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:34
msgid ""
"Clojure ensures that if the call to \"ns\" completes without throwing an "
"exception, the declared dependencies have been satisfied and the "
"capabilities they provide are available."
msgstr ""

#. type: Title ==
#: en/content/reference/libs.adoc:35
#, no-wrap
msgid "Example Lib"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:38
msgid "A simple lib:"
msgstr ""

#. type: delimited block -
#: en/content/reference/libs.adoc:45
#, no-wrap
msgid ""
"(ns com.my-company.clojure.examples.my-utils\n"
"  (:import java.util.Date)\n"
"  (:use [clojure.string :only (join)])\n"
"  (:require [clojure.java.io :as jio]))\n"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:48
msgid ""
"The `ns` form names the lib's namespace and declares its dependencies. Based "
"on its name, this lib is typically defined in a source file at the classpath-"
"relative path: com/my_company/clojure/examples/my_utils.clj (note the "
"translations from period to slash and hyphen to underscore)."
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:49
msgid ""
"The `:import` clause declares this lib's use of `java.util.Date` and makes "
"it available to code in this lib using its unqualified name."
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:50
msgid ""
"The `:use` clause declares a dependency on the `clojure.string` lib for its "
"`join` function only. +join+ may be used in this lib's code using its "
"unqualified name."
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:51
msgid ""
"The `:require` clause declares a dependency on the `clojure.java.io` lib and "
"enables using its members using the shorter namespace alias `jio`."
msgstr ""

#. type: Title ==
#: en/content/reference/libs.adoc:52
#, no-wrap
msgid "Prefix Lists"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:55
msgid ""
"It's common for a lib to depend on several other libs whose full names share "
"a common prefix. In calls to `require` and `use` (and in `:require` and `:"
"use` clauses within an +ns+ form), the common prefix can be extracted and "
"provided once using a prefix list. For example, these two forms are "
"equivalent:"
msgstr ""

#. type: delimited block -
#: en/content/reference/libs.adoc:60
#, no-wrap
msgid ""
"(require 'clojure.contrib.def 'clojure.contrib.except 'clojure.contrib.sql)\n"
"(require '(clojure.contrib def except sql))\n"
msgstr ""

#. type: Title ==
#: en/content/reference/libs.adoc:64 en/content/reference/refs.adoc:73
#: en/content/reference/namespaces.adoc:24
#: en/content/reference/other_functions.adoc:41
#: en/content/reference/other_functions.adoc:65
#: en/content/reference/vars.adoc:85
#: en/content/reference/data_structures.adoc:70
#: en/content/reference/data_structures.adoc:90
#: en/content/reference/data_structures.adoc:98
#: en/content/reference/data_structures.adoc:107
#: en/content/reference/data_structures.adoc:116
#: en/content/reference/data_structures.adoc:162
#: en/content/reference/data_structures.adoc:174
#: en/content/reference/data_structures.adoc:188
#: en/content/reference/data_structures.adoc:223
#: en/content/reference/repl_and_main.adoc:185
#: en/content/reference/agents.adoc:64
#, no-wrap
msgid "Related functions"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:67
msgid ""
"Creating a namespace: https://clojure.github.io/clojure/clojure.core-api."
"html#clojure.core/ns[ns]"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:69
msgid ""
"Ensuring a lib is loaded: https://clojure.github.io/clojure/clojure.core-api."
"html#clojure.core/require[require] https://clojure.github.io/clojure/clojure."
"core-api.html#clojure.core/use[use]"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:71
msgid ""
"Listing loaded libs: https://clojure.github.io/clojure/clojure.core-api."
"html#clojure.core/loaded-libs[loaded-libs]"
msgstr ""

#. type: Title ==
#: en/content/reference/libs.adoc:73
#, no-wrap
msgid "Lib load order"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:76
msgid ""
"Libs may exist in either compiled (`.class`) or source (`.clj` or `.cljc`) "
"form. In some cases, one or even all of these might exist on the classpath. "
"The lib is loaded from one of them based on the following rules:"
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:78
msgid ""
"A `.class` file is always preferred over a source file, unless the source "
"file's timestamp is newer than the `.class` file, in which case the source "
"file is preferred."
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:79
msgid ""
"A `.clj` (platform-specific file) is always preferred over a `.cljc` (common "
"across platforms)."
msgstr ""

#. type: Plain text
#: en/content/reference/libs.adoc:80
msgid ""
"The second rule allows a library author to ship both a portable common "
"definition of a lib while also shipping platform-specific libs that override "
"the portable version to do something that leverages the host platform."
msgstr ""
