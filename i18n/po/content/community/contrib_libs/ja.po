# Japanese translations for clojure-site-ja package
# Copyright (C) 2019 Japan Clojurians
# This file is distributed under the same license as the clojure-site-ja package.
# Automatically generated, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: clojure-site-ja 0.0.1\n"
"POT-Creation-Date: 2019-07-25 20:54+0900\n"
"PO-Revision-Date: 2019-07-25 20:54+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ==
#: en/content/community/contrib_howto.adoc:1 en/content/community/contrib_libs.adoc:107
#, no-wrap
msgid "Contrib How-To"
msgstr ""

#. type: Title ==
#: en/content/community/contrib_libs.adoc:1 en/content/community/contrib_libs.adoc:27
#, fuzzy, no-wrap
#| msgid "Libraries"
msgid "Contrib Libraries"
msgstr "ライブラリ"

#. type: Plain text
#: en/content/community/contrib_libs.adoc:4 en/content/news/2019/02/04/state-of-clojure-2019.adoc:4
#, fuzzy
msgid "Alex Miller 2019-02-04"
msgstr "Alex Miller 2017-09-02"

#. type: Plain text
#: en/content/community/contrib_libs.adoc:11
msgid ""
"Clojure is an umbrella level project that hosts many additional libraries called _Clojure contrib_, which all exist "
"under the https://github.com/clojure[Clojure organization] on GitHub."
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:13
msgid ""
"These libraries use the same contribution model (<<xref/../../dev/contributor_agreement#,Contributor Agreement>>, "
"license, and copyright) as Clojure itself, and a shared infrastructure maintained by the Clojure core team:"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:15
msgid "Source control - Git libraries on GitHub"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:16
msgid "Issues - https://clojure.atlassian.net/projects/CLJ[JIRA]"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:17
msgid "Development model - patches in JIRA, no PRs"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:18
msgid "Continuous integration - https://build.clojure.org[Jenkins]"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:19
msgid ""
"Doc generation and hosting - https://tomfaulhaber.github.io/autodoc/[Autodoc] and GitHub http://clojure.github.io/"
"[pages]"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:20
msgid "Builds - Maven with deployment to Maven Central under the groupId `org.clojure`"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:22
msgid ""
"Every project has one or more owners (often community members) who determine the direction of their library, triage "
"patches, etc. Project owners have full commit rights and authenticated access to their project on the build box for "
"releases."
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:24
msgid ""
"Contrib libraries are open source libraries, like any other open source Clojure library. They vary widely in "
"development activity and quality and may or may not be the best alternative for their functionality in the overall "
"ecosystem. You should evaluate them before use as you would any open source library you intend to use as a dependency."
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:26
msgid ""
"If you find that active development for a library has ceased and you would like to take over as owner, please contact "
"clojure@cognitect.com. Good stewards for a library typically tend to be those actively using the library and "
"knowledgable about the goals and alternatives of the functionality."
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:30
msgid "Status legend:"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:32
msgid "Active - under active regular development"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:33
msgid "Stable - working but development is irregular"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:34
msgid "Inactive - no longer in development, will not be worked on again"
msgstr ""

#. type: Table
#: en/content/community/contrib_libs.adoc:79
#, no-wrap
msgid ""
"| Lib | Description | Owner | Status\n"
"| https://clojure.github.io/algo.generic/[algo.generic] | Generic versions of common functions | Konrad Hinsen | Stable\n"
"| https://clojure.github.io/algo.monads/[algo.monads] | Monad macros and Definitions | Konrad Hinsen | Stable\n"
"| https://clojure.github.io/core.async/[core.async] | Facilities for asynchronous programming and communication | Rich Hickey | Stable\n"
"| https://clojure.github.io/core.cache/[core.cache] | A caching library implementing various cache strategies | Sean Corfield | Active\n"
"| https://clojure.github.io/core.contracts/[core.contracts] | Contracts programming in Clojure | Fogus | Inactive\n"
"| https://clojure.github.io/core.incubator/[core.incubator] | Functions proposed for core inclusion |  | Inactive \n"
"| https://clojure.github.io/core.logic/[core.logic] | A logic programming library based on miniKanren | David Nolen | Stable\n"
"| https://clojure.github.io/core.match/[core.match] | Pattern match and predicate dispatch  | David Nolen | Stable\n"
"| https://clojure.github.io/core.memoize/[core.memoize] | A manipulable, pluggable, memoization framework | Sean Corfield | Active\n"
"| https://clojure.github.io/core.rrb-vector/[core.rrb-vector] | RRB-Tree-based vectors | Michał Marczyk | Stable\n"
"| https://clojure.github.io/core.typed/[core.typed] | Gradual typing | Ambrose Bonnaire-Sargent | Active\n"
"| https://clojure.github.io/core.unify/[core.unify] | Unification library | Fogus | Stable\n"
"| https://clojure.github.io/data.avl/[data.avl] | AVL trees | Michał Marczyk | Stable\n"
"| https://clojure.github.io/data.codec/[data.codec] | Native codec implementations | Alexander Taggart | Stable\n"
"| https://clojure.github.io/data.csv/[data.csv] | Reading and writing CSV files | Jonas Enlund | Stable\n"
"| https://clojure.github.io/data.finger-tree/[data.finger-tree] | Finger trees | Chouser | Stable\n"
"| https://clojure.github.io/data.fressian/[data.fressian] | Extensible binary Data Notation | Stuart Halloway | Stable\n"
"| https://clojure.github.io/data.generators/[data.generators] | Random data generators | Stuart Halloway | Inactive\n"
"| https://clojure.github.io/data.json/[data.json] | JSON encoding / decoding | Stuart Sierra | Stable\n"
"| https://clojure.github.io/data.priority-map/[data.priority-map] | Priority maps | Mark Engelberg | Stable\n"
"| https://clojure.github.io/data.xml/[data.xml] | Lazy XML parsing | Ryan Senior, Herwig Hochleitner | Stable\n"
"| https://clojure.github.io/data.zip/[data.zip] | Manipulating zippers | | Stable\n"
"| https://clojure.github.io/java.classpath/[java.classpath] | Classpath utilities | Stuart Sierra | Stable\n"
"| https://clojure.github.io/java.data/[java.data] | Work with Java Beans | Cosmin Stejerean | Stable\n"
"| https://clojure.github.io/java.jdbc/[java.jdbc] | JDBC-based SQL interface | Sean Corfield | Active\n"
"| https://clojure.github.io/java.jmx/[java.jmx] | JMX interface | Nick Bailey | Stable\n"
"| https://clojure.github.io/math.combinatorics/[math.combinatorics] | Lazy sequences for common combinatorial functions | Mark Engelberg | Stable\n"
"| https://clojure.github.io/math.numeric-tower/[math.numeric-tower] | Math functions and numeric tower | Mark Engelberg | Stable\n"
"| https://clojure.github.io/test.generative/[test.generative] | Test data generation and execution harness | Stuart Halloway | Inactive\n"
"| https://clojure.github.io/tools.analyzer/[tools.analyzer] | Analyzer framework for Clojure code | Nicola Mometto | Active\n"
"| https://clojure.github.io/tools.analyzer.jvm/[tools.analyzer.jvm] | JVM-specific passes for tools.analyzer | Nicola Mometto | Active\n"
"| https://clojure.github.io/tools.cli/[tools.cli] | Command-line argument processor | Sean Corfield | Active\n"
"| https://clojure.github.io/tools.deps.alpha/[tools.deps.alpha] | Tools for dependency management and classpath construction | Alex Miller | Active\n"
"| https://clojure.github.io/tools.gitlibs/[tools.gitlibs] | Tools for retrieving, caching, and using git-based projects | Alex Miller | Active\n"
"| https://clojure.github.io/tools.emitter.jvm/[tools.emitter.jvm] | JVM bytecode generator | Nicola Mometto | Active\n"
"| https://clojure.github.io/tools.logging/[tools.logging] | Logging tools | Alexander Taggart | Stable\n"
"| https://clojure.github.io/tools.macro/[tools.macro] | Tools for macro writers | Konrad Hinsen | Stable\n"
"| https://clojure.github.io/tools.namespace/[tools.namespace] | Tools for working with namespace declarations | Stuart Sierra | Stable\n"
"| https://clojure.github.io/tools.nrepl/[tools.nrepl] | Network REPL | | Inactive\n"
"| https://clojure.github.io/tools.reader/[tools.reader] | Clojure reader | Nicola Mometto | Active\n"
"| https://clojure.github.io/tools.trace/[tools.trace] | Execution tracing | Luc Prefontaine | Stable\n"
msgstr ""

#. type: Title ==
#: en/content/community/contrib_libs.adoc:81
#, fuzzy, no-wrap
#| msgid "Libraries"
msgid "Core Libraries"
msgstr "ライブラリ"

#. type: Plain text
#: en/content/community/contrib_libs.adoc:84
msgid ""
"Additionally, the following libraries are dependencies of Clojure itself managed directly by the core team. These "
"libraries use the same shared infrastructure as the Contrib libraries, so are largely the same in that regard. "
"Development in these libraries is often linked to development in the core language itself."
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:86
msgid "https://clojure.github.io/core.specs.alpha/[core.specs.alpha] Specs for clojure.core"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:87
msgid "https://clojure.github.io/spec.alpha/[spec.alpha] Describing the structure of data and functions with specs"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:88
#, fuzzy
#| msgid "https://github.com/clojure/clojurescript[ClojureScript Home]"
msgid "https://clojure.github.io/spec-alpha2/[spec-alpha2] In-development next version of spec"
msgstr "https://github.com/clojure/clojurescript[ClojureScript Home]"

#. type: Plain text
#: en/content/community/contrib_libs.adoc:90
msgid "And finally, there are some repositories in the Clojure GitHub organization that are not libraries at all:"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:92
msgid ""
"https://github.com/clojure/clojure-site/[clojure-site] - this web site, see <<contributing_site#,Site Contributions>>"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:93
#, fuzzy
#| msgid "https://github.com/clojure/clojurescript[ClojureScript Home]"
msgid "https://github.com/clojure/clojurescript-site/[clojurescript-site] - https://clojurescript.org web site"
msgstr "https://github.com/clojure/clojurescript[ClojureScript Home]"

#. type: Plain text
#: en/content/community/contrib_libs.adoc:94
#, fuzzy
#| msgid "https://github.com/clojure/clojurescript[ClojureScript Home]"
msgid "https://github.com/clojure/brew-install/[brew-install] - `clj` installer builds"
msgstr "https://github.com/clojure/clojurescript[ClojureScript Home]"

#. type: Plain text
#: en/content/community/contrib_libs.adoc:95
msgid "https://github.com/clojure/build.ci/[build.ci] - Jenkins project builder for contrib"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:96
msgid "https://github.com/clojure/build.poms/[build.poms] - Maven super pom for contrib libs"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:97
#, fuzzy
#| msgid "https://github.com/clojure/clojure-clr[ClojureCLR Home]"
msgid "https://github.com/clojure/clojure-api-doc/[clojure-api-doc] - Clojure api doc builder"
msgstr "https://github.com/clojure/clojure-clr[ClojureCLR Home]"

#. type: Plain text
#: en/content/community/contrib_libs.adoc:98
msgid "https://github.com/clojure/contrib-api-doc/[contrib-api-doc] - contrib lib api doc builder"
msgstr ""

#. type: Title ==
#: en/content/community/contrib_libs.adoc:99 en/content/news/2013/06/28/clojure-clore-async-channels.adoc:28
#, no-wrap
msgid "History"
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:102
msgid ""
"Prior to Clojure 1.3, Clojure had a single \"batteries included\" library called clojure-contrib that consisted of "
"many independent helper namespaces contributed by the community. In the Clojure 1.3 timeframe, this library was split "
"into the independent libraries that exist today with independent owners. Some of the namespaces were seen as "
"experimental and not promoted into any public library. Stuart Sierra recounts this in more detail in his <<xref/../../"
"news/2012/02/17/clojure-governance#,post>>."
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:104
msgid ""
"At the time there was an idea that some of the contrib libraries could eventually be promoted into Clojure's core "
"library itself. With time, there has been a desire to keep Clojure's core library small and to allow these "
"independent libraries to stay independent and evolve at their own pace."
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:106
msgid "Also see <<contrib_history#,Contrib History>> for some legacy history of the contrib split."
msgstr ""

#. type: Plain text
#: en/content/community/contrib_libs.adoc:109
msgid ""
"Some older content on participating or contributing to contrib can be found at <<contrib_howto#,Contrib How-To>>."
msgstr ""
