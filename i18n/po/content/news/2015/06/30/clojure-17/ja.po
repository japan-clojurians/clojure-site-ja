# Japanese translations for clojure-site-ja package
# Copyright (C) 2016 Japan Clojurians
# This file is distributed under the same license as the clojure-site-ja package.
# Automatically generated, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: clojure-site-ja 0.0.1\n"
"POT-Creation-Date: 2018-02-07 07:23+0900\n"
"PO-Revision-Date: 2019-06-15 19:02+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ==
#: en/content/reference/transducers.adoc:1 en/content/news/2015/06/30/clojure-17.adoc:10
#, no-wrap
msgid "Transducers"
msgstr "トランスデューサー(transducer)"

#. type: Plain text
#: en/content/news/2013/06/28/clojure-clore-async-channels.adoc:104 en/content/news/2015/06/30/clojure-17.adoc:39
msgid "Timothy Baldridge"
msgstr ""

#. type: Plain text
#: en/content/news/2013/06/28/clojure-clore-async-channels.adoc:105 en/content/news/2015/06/30/clojure-17.adoc:58
msgid "Ghadi Shayban"
msgstr ""

#. type: Plain text
#: en/content/news/2013/06/28/clojure-clore-async-channels.adoc:106 en/content/news/2015/06/30/clojure-17.adoc:54
msgid "Alex Miller"
msgstr ""

#. type: Title =
#: en/content/news/2015/06/30/clojure-17.adoc:1
#, no-wrap
msgid "Clojure 1.7 is now available "
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:4
msgid "Alex Miller 2015-06-30"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:9
msgid ""
"We are pleased to announce the release of Clojure 1.7. The two headline features for 1.7 are transducers and reader "
"conditionals. Also see the https://github.com/clojure/clojure/blob/master/changes.md[complete list] of all changes "
"since Clojure 1.6 for more details."
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:13
msgid ""
"<<xref/../../../../../../reference/transducers#,Transducers>> are composable algorithmic transformations. They are "
"independent from the context of their input and output sources and specify only the essence of the transformation in "
"terms of an individual element. Because transducers are decoupled from input or output sources, they can be used in "
"many different processes - collections, streams, channels, observables, etc. Transducers compose directly, without "
"awareness of input or creation of intermediate aggregates."
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:15
msgid ""
"Many existing sequence functions now have a new arity (one fewer argument than before). This arity will return a "
"transducer that represents the same logic but is independent of lazy sequence processing. Functions included are: "
"map, mapcat, filter, remove, take, take-while, drop, drop-while, take-nth, replace, partition-by, partition-all, "
"keep, keep-indexed, map-indexed, distinct, and interpose. Additionally some new transducer functions have been added: "
"cat, dedupe, and random-sample."
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:17
msgid "Transducers can be used in several new or existing contexts:"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:19
msgid "into - to collect the results of applying a transducer"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:20
msgid "sequence - to incrementally compute the result of a transducer"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:21
msgid "transduce - to immediately compute the result of a transducer"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:22
msgid "eduction - to delay computation and recompute each time"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:23
msgid "core.async - to apply a transducer while values traverse a channel"
msgstr ""

#. type: Title ==
#: en/content/news/2015/06/30/clojure-17.adoc:24
#, no-wrap
msgid "Portable Clojure and Reader Conditionals"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:27
msgid ""
"It is now common to see a library or application targeting multiple Clojure platforms with a single codebase. Clojure "
"1.7 introduces a new extension (.cljc) for files that can be loaded by Clojure and ClojureScript (and other Clojure "
"platforms)."
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:29
msgid ""
"There will often be some parts of the code that vary between platforms. The primary mechanism for dealing with "
"platform-specific code is to isolate that code into a minimal set of namespaces and then provide platform-specific "
"versions (.clj/.class or .cljs) of those namespaces."
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:31
msgid ""
"To support cases where is not feasible to isolate the varying parts of the code, or where the code is mostly portable "
"with only small platform-specific parts, 1.7 provides <<xref/../../../../../../reference/reader#_reader_conditionals,"
"Reader Conditionals>>."
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:33
msgid ""
"Reader conditionals are a new reader form that is only allowed in portable cljc files. A reader conditional "
"expression is similar to a cond in that it specifies alternating platform identifiers and expressions. Each platform "
"is checked in turn until a match is found and the expression is read. All expressions not selected are read but "
"skipped. A final :default fallthrough can be provided. If no expressions are matched, the reader conditional will "
"read nothing. The reader conditional splicing form takes a sequential expression and splices the result into the "
"surrounding code."
msgstr ""

#. type: Title ==
#: en/content/news/2015/06/30/clojure-17.adoc:34
#, no-wrap
msgid "Contributors"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:37
msgid "Thanks to all of those who contributed patches to Clojure 1.7:"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:40
msgid "Bozhidar Batsov"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:41
msgid "Brandon Bloom"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:42
msgid "Michael Blume"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:43
msgid "Ambrose Bonnaire-Sergeant"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:44
msgid "Aaron Cohen"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:45
msgid "Pepijn de Vos"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:46
msgid "Andy Fingerhut"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:47
msgid "Gary Fredricks"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:48
msgid "Daniel Solano Gómez"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:49
msgid "Stuart Halloway"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:50 en/content/about/spec.adoc:381
msgid "Rich Hickey"
msgstr "Rich Hickey"

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:51
msgid "Immo Heikkinen"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:52
msgid "Andrei Kleschinsky"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:53
msgid "Howard Lewis Ship"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:55
msgid "Steve Miner"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:56
msgid "Nicola Mometto"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:57
msgid "Tomasz Nurkiewicz"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:59
msgid "Paul Stadig"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:60
msgid "Zach Tellman"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:61
msgid "Luke VanderHart"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:62
msgid "Jozef Wagner"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:63
msgid "Devin Walters"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:64
msgid "Jason Wolfe"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:65
msgid "Steven Yi"
msgstr ""

#. type: Plain text
#: en/content/news/2015/06/30/clojure-17.adoc:66
msgid "Also, continued thanks to the total list of contributors from all releases."
msgstr ""
